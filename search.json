[
  {
    "objectID": "tutorials/tutorial2.html",
    "href": "tutorials/tutorial2.html",
    "title": "Instalación paquetes",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ut ex nec dolor eleifend congue. Donec suscipit imperdiet turpis feugiat blandit. Quisque malesuada lectus ut justo bibendum tempus. Proin ornare lectus vitae euismod interdum. Pellentesque bibendum, ex sed porttitor pellentesque, augue metus tristique lacus, sit amet condimentum ligula eros eu erat. Donec turpis urna, pretium in commodo sagittis, posuere sed felis. Sed sit amet enim ac mauris vulputate varius. Aliquam erat volutpat. Donec quis mattis risus. Duis interdum nulla ac sem viverra lobortis. Suspendisse dapibus tortor nunc, in fringilla ipsum blandit a.",
    "crumbs": [
      "Tutoriales",
      "Jupyter",
      "Instalación paquetes"
    ]
  },
  {
    "objectID": "tutorials/tutorial.html",
    "href": "tutorials/tutorial.html",
    "title": "Tutoriales",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ut ex nec dolor eleifend congue. Donec suscipit imperdiet turpis feugiat blandit. Quisque malesuada lectus ut justo bibendum tempus. Proin ornare lectus vitae euismod interdum. Pellentesque bibendum, ex sed porttitor pellentesque, augue metus tristique lacus, sit amet condimentum ligula eros eu erat. Donec turpis urna, pretium in commodo sagittis, posuere sed felis. Sed sit amet enim ac mauris vulputate varius. Aliquam erat volutpat. Donec quis mattis risus. Duis interdum nulla ac sem viverra lobortis. Suspendisse dapibus tortor nunc, in fringilla ipsum blandit a.",
    "crumbs": [
      "Tutoriales"
    ]
  },
  {
    "objectID": "ejercicios/hello2.html",
    "href": "ejercicios/hello2.html",
    "title": "Quarto Computations",
    "section": "",
    "text": "import numpy as np\na = np.arange(15).reshape(3, 5)\na\n\narray([[ 0,  1,  2,  3,  4],\n       [ 5,  6,  7,  8,  9],\n       [10, 11, 12, 13, 14]])",
    "crumbs": [
      "Tutoriales",
      "Jupyter",
      "Ejemplo .ipynb"
    ]
  },
  {
    "objectID": "ejercicios/hello2.html#numpy",
    "href": "ejercicios/hello2.html#numpy",
    "title": "Quarto Computations",
    "section": "",
    "text": "import numpy as np\na = np.arange(15).reshape(3, 5)\na\n\narray([[ 0,  1,  2,  3,  4],\n       [ 5,  6,  7,  8,  9],\n       [10, 11, 12, 13, 14]])",
    "crumbs": [
      "Tutoriales",
      "Jupyter",
      "Ejemplo .ipynb"
    ]
  },
  {
    "objectID": "ejercicios/hello2.html#matplotlib",
    "href": "ejercicios/hello2.html#matplotlib",
    "title": "Quarto Computations",
    "section": "Matplotlib",
    "text": "Matplotlib\n\nimport matplotlib.pyplot as plt\n\nfig = plt.figure()\nx = np.arange(10)\ny = 2.5 * np.sin(x / 20 * np.pi)\nyerr = np.linspace(0.05, 0.2, 10)\n\nplt.errorbar(x, y + 3, yerr=yerr, label='both limits (default)')\nplt.errorbar(x, y + 2, yerr=yerr, uplims=True, label='uplims=True')\nplt.errorbar(x, y + 1, yerr=yerr, uplims=True, lolims=True,\n             label='uplims=True, lolims=True')\n\nupperlimits = [True, False] * 5\nlowerlimits = [False, True] * 5\nplt.errorbar(x, y, yerr=yerr, uplims=upperlimits, lolims=lowerlimits,\n             label='subsets of uplims and lolims')\n\nplt.legend(loc='lower right')\nplt.show(fig)",
    "crumbs": [
      "Tutoriales",
      "Jupyter",
      "Ejemplo .ipynb"
    ]
  },
  {
    "objectID": "ejercicios/hello2.html#plotly",
    "href": "ejercicios/hello2.html#plotly",
    "title": "Quarto Computations",
    "section": "Plotly",
    "text": "Plotly\nimport plotly.express as px\nimport plotly.io as pio\ngapminder = px.data.gapminder()\ndef gapminder_plot(year):\n    gapminderYear = gapminder.query(\"year == \" + \n                                    str(year))\n    fig = px.scatter(gapminderYear, \n                     x=\"gdpPercap\", y=\"lifeExp\",\n                     size=\"pop\", size_max=60,\n                     hover_name=\"country\")\n    fig.show()\n    \ngapminder_plot(1957)\ngapminder_plot(2007)\n\n\n\n\n\n\n\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\n(a) Gapminder: 1957\n\n\n\n\n\n\n\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\n(b) Gapminder: 2007\n\n\n\n\n\n\n\nFigure 1: Life Expectancy and GDP",
    "crumbs": [
      "Tutoriales",
      "Jupyter",
      "Ejemplo .ipynb"
    ]
  },
  {
    "objectID": "ejercicios/hello2.html#handcalcs",
    "href": "ejercicios/hello2.html#handcalcs",
    "title": "Quarto Computations",
    "section": "Handcalcs",
    "text": "Handcalcs\n\nimport handcalcs.render\nimport IPython\nip = IPython.core.getipython.get_ipython()\nip.display_formatter.formatters['text/latex'].enabled = True\n\n\n%%render\nA_1 = 34.5 #m$^2$\nm_s = 2.35 #kg$\\cdot$s$^{-1}$\nF = m_s/A_1 #kg$\\cdot$m$^{-2}\\cdot$s$^{-1}$\n\n&lt;IPython.core.display.Latex object&gt;",
    "crumbs": [
      "Tutoriales",
      "Jupyter",
      "Ejemplo .ipynb"
    ]
  },
  {
    "objectID": "ejercicios/e2_5_3.html",
    "href": "ejercicios/e2_5_3.html",
    "title": "Ejercicio 3: Evaporador de 2 efectos backward",
    "section": "",
    "text": "Un evaporador de dos efectos verticales es utilizado para concentrar un flujo de una solución de sólidos disueltos al \\(19~\\%\\). El flujo entra al sistema a \\(80000~\\text{L/h}\\) con una temperatura de \\(25~\\text{°C}\\). Se quiere alcanzar una concentración de sólidos del \\(40~\\%\\). Al entrar, el flujo pasa por dos intercambiadores de tubo y carcasa a contra-corrientes \\(a\\) y \\(b\\) que actuan como calentadores. Luego, pasa a través del segundo y primer efecto como muestra la figura. El vapor que se utiliza en el calentador \\(a\\) proviene de la linea de vapor entre el segundo efecto y el condensador \\(C\\). Mientras que para el calentador \\(b\\) se utiliza el vapor proveniente de la linea de vapor entre el primer y segundo efecto. La diferencia de temperaturas \\(\\Delta T_h\\) para ambos calentadores es de \\(10~\\text{°C}\\). Por último, la temperatura de entrada del vapor saturado de la corriente \\(\\text{S}\\) es de \\(110~\\text{°C}\\).\n\n\n\nSistema de dos efectos backward.\n\n\nAdemás, su mejor amigo le asegura que las diferencias de temperatura para cada intercambiador son \\(\\Delta T_1 = 22~\\text{°C}\\) y \\(\\Delta T_2 = 15~\\text{°C}\\). Para corroborar, le entrega la siguiente información. - La gravedad específica para sólidos disueltos al \\(19\\%\\) es \\(1.0632\\) y la densidad del agua es \\(0.995~\\text{kg/L}\\). - Las elevaciones del punto de ebullición (EPE) son \\(7~\\text{°C}\\) y \\(4~\\text{°C}\\) para el primer y segundo efecto respectivamente. - Los coeficientes de transferencia global de calor corregidos son \\(25555.12~\\text{W/m}^2\\cdot\\text{K}\\) para \\(\\text{E}1\\) y \\(39974.8~\\text{W/m}^2\\cdot\\text{K}\\) para \\(\\text{E}2\\). - Considere que el calor latente del vapor será \\(\\lambda_{s}=2183~\\text{kJ/kg}\\), \\(\\lambda_{1}=2341~\\text{kJ/kg}\\) y \\(\\lambda_{2}=2678~\\text{kJ/kg}\\). - La ecuación para el calor específico a presión constante en función de la temperatura (en °C) es:\n\\[c_p (\\text{J/kg}\\cdot\\text{°C}) = 6.5684 T + 3499\\]\nEncuentre: 1. La fracción másica de sólidos disueltos luego del segundo efecto. 2. El flujo másico de vapor requerido en la corriente \\(\\text{S}\\) en \\(\\text{kg/h}\\). 3. El área de transferecia de calor para cada efecto en \\(\\text{m}^2\\). 4. La economía del intercambiador. 5. El calor a ser removido del condensdor en \\(\\text{MW}\\).",
    "crumbs": [
      "Tutoriales",
      "Jupyter",
      "Ejemplo libro IIQ2013"
    ]
  },
  {
    "objectID": "ejercicios/e2_5_3.html#enunciado",
    "href": "ejercicios/e2_5_3.html#enunciado",
    "title": "Ejercicio 3: Evaporador de 2 efectos backward",
    "section": "",
    "text": "Un evaporador de dos efectos verticales es utilizado para concentrar un flujo de una solución de sólidos disueltos al \\(19~\\%\\). El flujo entra al sistema a \\(80000~\\text{L/h}\\) con una temperatura de \\(25~\\text{°C}\\). Se quiere alcanzar una concentración de sólidos del \\(40~\\%\\). Al entrar, el flujo pasa por dos intercambiadores de tubo y carcasa a contra-corrientes \\(a\\) y \\(b\\) que actuan como calentadores. Luego, pasa a través del segundo y primer efecto como muestra la figura. El vapor que se utiliza en el calentador \\(a\\) proviene de la linea de vapor entre el segundo efecto y el condensador \\(C\\). Mientras que para el calentador \\(b\\) se utiliza el vapor proveniente de la linea de vapor entre el primer y segundo efecto. La diferencia de temperaturas \\(\\Delta T_h\\) para ambos calentadores es de \\(10~\\text{°C}\\). Por último, la temperatura de entrada del vapor saturado de la corriente \\(\\text{S}\\) es de \\(110~\\text{°C}\\).\n\n\n\nSistema de dos efectos backward.\n\n\nAdemás, su mejor amigo le asegura que las diferencias de temperatura para cada intercambiador son \\(\\Delta T_1 = 22~\\text{°C}\\) y \\(\\Delta T_2 = 15~\\text{°C}\\). Para corroborar, le entrega la siguiente información. - La gravedad específica para sólidos disueltos al \\(19\\%\\) es \\(1.0632\\) y la densidad del agua es \\(0.995~\\text{kg/L}\\). - Las elevaciones del punto de ebullición (EPE) son \\(7~\\text{°C}\\) y \\(4~\\text{°C}\\) para el primer y segundo efecto respectivamente. - Los coeficientes de transferencia global de calor corregidos son \\(25555.12~\\text{W/m}^2\\cdot\\text{K}\\) para \\(\\text{E}1\\) y \\(39974.8~\\text{W/m}^2\\cdot\\text{K}\\) para \\(\\text{E}2\\). - Considere que el calor latente del vapor será \\(\\lambda_{s}=2183~\\text{kJ/kg}\\), \\(\\lambda_{1}=2341~\\text{kJ/kg}\\) y \\(\\lambda_{2}=2678~\\text{kJ/kg}\\). - La ecuación para el calor específico a presión constante en función de la temperatura (en °C) es:\n\\[c_p (\\text{J/kg}\\cdot\\text{°C}) = 6.5684 T + 3499\\]\nEncuentre: 1. La fracción másica de sólidos disueltos luego del segundo efecto. 2. El flujo másico de vapor requerido en la corriente \\(\\text{S}\\) en \\(\\text{kg/h}\\). 3. El área de transferecia de calor para cada efecto en \\(\\text{m}^2\\). 4. La economía del intercambiador. 5. El calor a ser removido del condensdor en \\(\\text{MW}\\).",
    "crumbs": [
      "Tutoriales",
      "Jupyter",
      "Ejemplo libro IIQ2013"
    ]
  },
  {
    "objectID": "ejercicios/e2_5_3.html#solución",
    "href": "ejercicios/e2_5_3.html#solución",
    "title": "Ejercicio 3: Evaporador de 2 efectos backward",
    "section": "Solución",
    "text": "Solución\n\nimport handcalcs.render\nhandcalcs.set_option(\"custom_symbols\",{\"dT\": \"\\Delta T\", \"dEPE\": \"\\Delta EPE\", \"dotm\": \"\\dot{m\", \"lambda\": \"\\lambda\"})\nhandcalcs.set_option(\"latex_block_start\", \"$$\")\nhandcalcs.set_option(\"latex_block_end\", \"$$\")\nfrom sympy import *\nfrom sympy.solvers.solveset import linsolve\n\n\nInciso 1\n\n%%render params\nw_f = 0.19\nw_p = 0.4\nrho_w = 0.995 #kg/L\n\n&lt;IPython.core.display.Latex object&gt;\n\n\nAsumiendo \\(1~\\text{hora}\\) de opración.\n\n%%render short 2\nF = 80000*1.0632*rho_w #kg\nP = F*(w_f/w_p) #kg\nV = F-P #kg\n\n&lt;IPython.core.display.Latex object&gt;\n\n\nPodemos asumir que la evaporación es equitativa en ambos efectos, luego para el segundo efecto:\n\\[\nw_f\\cdot F = w_{E2}\\cdot L =  w_{E2}\\cdot (F-V_{E2})\n\\]\n\n%%render short\nV_E2 = V/2 #kg\nw_E2 = (w_f*F)/(F-V_E2)\n\n&lt;IPython.core.display.Latex object&gt;\n\n\n\n\nInciso 2 y 3\nDel enunciado sabemos lo siguiente:\n\n%%render params\ndT_1 = 22\ndEPE_1 = 7\ndT_2 = 15\ndEPE_2 = 4\ndT_h = 10\nlambda_s = 2183e3 #J/kg\nlambda_1 = 2341e3 #J/kg\nlambda_2 = 2678e3 #J/kg\n\n&lt;IPython.core.display.Latex object&gt;\n\n\nAdemás definiremos una función que calcule el calor específico promedio entre dos temperaturas.\n\ndef c_p(T_1,T_2):\n    c_p1 = 6.5684*T_1+3499\n    c_p2 = 6.5684*T_2+3499\n    return (c_p1+c_p2)/2\n\nA partir del enunciado podemos despejar las tempraturas de los flujos.\n\n%%render short\n## Temperaturas en $^\\circ$C\nT_s = 110 #Vapor que entra a E1\nT_1 = T_s-dT_1 #Líquido en E1 o producto\nT_s2 = T_1-dEPE_1 #Vapor hacia E2\nT_2 = T_s2-dT_2 #Líquido en E2\nT_c = T_2-dEPE_2 #Vapor hacia el condensador\nT_b = T_s2-dT_h #Líquido que entra a E2 después de b\nT_a = T_c-dT_h #líquido que entra a b después de a\nT_F = 25 #Líquido que entra a a\n\n&lt;IPython.core.display.Latex object&gt;\n\n\nLos balances de calor entonces serán:\n\nm_1 = P\nm_F = F\nm_s, m_2 = symbols('\\dot{m}_s, \\dot{m}_2')\n\nPara el primer efecto.\n\\[\n\\dot{m}_s\\lambda_s = (\\dot{m}_2-\\dot{m}_1)\\lambda_1 + \\dot{m}_2\\left(\\frac{c_p(T_1)\\cdot c_p(T_2)}{2}\\right)\\left(T_1-T_2\\right)\n\\]\n\nE1 = Eq(m_s*lambda_s, (m_2-m_1)*lambda_1+m_2*c_p(T_1,T_2)*(T_1-T_2))\nE1\n\n\\(\\displaystyle 2183000.0 \\dot{m}_s = 2429104.8696 \\dot{m}_2 - 94107244872.0\\)\n\n\nPara el segundo efecto más el calentador \\(b\\).\n\\[\n(\\dot{m}_2-\\dot{m}_1)\\lambda_1 = (\\dot{m}_F-\\dot{m}_2)\\lambda_2 + \\dot{m}_F\\left(\\frac{c_p(T_2)\\cdot c_p(T_b)}{2}\\right)\\left(T_2-T_b\\right) + \\dot{m}_F\\left(\\frac{c_p(T_b)\\cdot c_p(T_a)}{2}\\right)\\left(T_b-T_a\\right)\n\\]\n\nE2 = Eq((m_2-m_1)*lambda_1, (m_F-m_2)*lambda_2 + m_F*c_p(T_2,T_b)*(T_2-T_b)+ m_F*c_p(T_b,T_a)*(T_b-T_a))\nE2\n\n\\(\\displaystyle 2341000.0 \\dot{m}_2 - 94107244872.0 = 231245952445.871 - 2678000.0 \\dot{m}_2\\)\n\n\n\nsol = linsolve((E1,E2), (m_s, m_2))\nfor sol1, sol2 in sol:\n    dotm_s = sol1\n    dotm_2 = sol2\n\nLuego de resolver el sistema de ecuaciones llegamos a los siguientes flujos.\n\n%%render 0\ndotm_s = dotm_s #kg/h\ndotm_1 = m_1 #kg/h\ndotm_2 = dotm_2 #kg/h\ndotm_F = m_F #kg/h\n\n&lt;IPython.core.display.Latex object&gt;\n\n\nA partir de esta información podemos depejar la áreas en función de la ecuación característica.\n\\[\nq = UA\\Delta T\n\\]\n\n%%render long\nU_1 = 25555.12 #W/m$^2\\cdot$K\nU_2 = 39974.8 #W/m$^2\\cdot$K\nq_1 = (dotm_s/3600)*lambda_s #W\nA_1 = q_1/(U_1*dT_1) #m$^2$\nq_b = (dotm_F/3600)*c_p(T_b,T_a)*(T_b-T_a) #W\nq_2 = ((dotm_2-dotm_1)/3600)*lambda_2 - q_b #W\nA_2 = q_2/(U_2*dT_2) #m$^2$\n\n&lt;IPython.core.display.Latex object&gt;\n\n\nSe debe cumplir que \\(A_1 = A_2\\), por lo tanto los \\(\\Delta T_1\\) y \\(\\Delta T_2\\) no son los correspondientes a los efectos. Se debe hacer una corrección a las temperaturas.\n\n%%render\nA_prom = (A_1+A_2)/2\ndT_c1 = dT_1 * (A_1/A_prom)\ndT_c2 = dT_2 * (A_2/A_prom)\n\n&lt;IPython.core.display.Latex object&gt;\n\n\nCon estas nuevas diferencias de temperaturas iteramos.\n\n%%render short\n## Temperaturas en $^\\circ$C\nT_s = 110 #Vapor que entra a E1\nT_1 = T_s-dT_c1 #Líquido en E1 o producto\nT_s2 = T_1-dEPE_1 #Vapor hacia E2\nT_2 = T_s2-dT_c2 #Líquido en E2\nT_c = T_2-dEPE_2 #Vapor hacia el condensador\nT_b = T_s2-dT_h #Líquido que entra a E2 después de b\nT_a = T_c-dT_h #líquido que entra a b después de a\nT_F = 25 #Líquido que entra a a\n\n&lt;IPython.core.display.Latex object&gt;\n\n\nEl sistema de ecuaciones es el mismo, pero ahora cambian las temperaturas.\n\nm_1 = P\nm_F = F\nm_s, m_2 = symbols('\\dot{m}_s, \\dot{m}_2')\nE1 = Eq(m_s*lambda_s, (m_2-m_1)*lambda_1+m_2*c_p(T_1,T_2)*(T_1-T_2))\nE1\n\n\\(\\displaystyle 2183000.0 \\dot{m}_s = 2425248.49178518 \\dot{m}_2 - 94107244872.0\\)\n\n\n\nE2 = Eq((m_2-m_1)*lambda_1, (m_F-m_2)*lambda_2 + m_F*c_p(T_2,T_b)*(T_2-T_b)+ m_F*c_p(T_b,T_a)*(T_b-T_a))\nE2\n\n\\(\\displaystyle 2341000.0 \\dot{m}_2 - 94107244872.0 = 231242568253.435 - 2678000.0 \\dot{m}_2\\)\n\n\n\nsol = linsolve((E1,E2), (m_s, m_2))\nfor sol1, sol2 in sol:\n    dotm_s = sol1\n    dotm_2 = sol2\n\nLos nuevos flujos serán:\n\n%%render 2\ndotm_s = dotm_s #kg/h\ndotm_1 = m_1 #kg/h\ndotm_2 = dotm_2 #kg/h\ndotm_F = m_F #kg/h\n\n&lt;IPython.core.display.Latex object&gt;\n\n\nPor último comprobamos que las áreas sean las mismas.\n\n%%render long 1\nU_1 = 25555.12 #W/m$^2\\cdot$K\nU_2 = 39974.8 #W/m$^2\\cdot$K\nq_1 = (dotm_s/3600)*lambda_s #W\nA_1 = q_1/(U_1*dT_c1) #m$^2$\nq_b = (dotm_F/3600)*c_p(T_b,T_a)*(T_b-T_a) #W\nq_2 = ((dotm_2-dotm_1)/3600)*lambda_2 - q_b #W\nA_2 = q_2/(U_2*dT_c2) #m$^2$\n\n&lt;IPython.core.display.Latex object&gt;\n\n\nLas áreas son lo suficientemente parecidas. Por lo que podemos asumir que el área de los efectos será un promedio entre ambas.\n\n%%render 1\nA_prom = (A_1+A_2)/2\n\n&lt;IPython.core.display.Latex object&gt;\n\n\nEl flujo de vapor en la corriente \\(\\text{S}\\) será \\(28908~\\text{kg/h}\\). El área de los efectos será \\(29.5~\\text{m}^2\\).\n\n\nInciso 4\nLa economía del sistema completo viene dado por la división entre la cantidad evaporada \\(\\text{V}\\) calculada en el inciso 1 y el flujo de vapor \\(\\text{S}\\).\n\n%%render 2\nE = V/dotm_s #kg/kg\n\n&lt;IPython.core.display.Latex object&gt;\n\n\n\n\nInciso 5\nEl calor removido en el condensador final será.\n\\[\nq_C = \\left(\\dot{m}_F-\\dot{m}_2\\right)\\lambda_2 - \\dot{m}_F\\left(\\frac{c_p(T_a)\\cdot c_p(T_F)}{2}\\right)\\left(T_a-T_F\\right)\n\\]\n\n%%render long\nq_C = ((dotm_F - dotm_2)/3600)*lambda_2 - (dotm_F/3600)*c_p(T_a,T_F)*(T_a-T_F) #W\n\n&lt;IPython.core.display.Latex object&gt;\n\n\n\n%%render params 1\nR = q_C/10**6 #MW\n\n&lt;IPython.core.display.Latex object&gt;",
    "crumbs": [
      "Tutoriales",
      "Jupyter",
      "Ejemplo libro IIQ2013"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "compatibility.html",
    "href": "compatibility.html",
    "title": "Paquetes",
    "section": "",
    "text": "Paquetes necesarios: numpy, scipy, handcalcs"
  },
  {
    "objectID": "ejercicios/hello.html",
    "href": "ejercicios/hello.html",
    "title": "Quarto Computations",
    "section": "",
    "text": "import numpy as np\na = np.arange(15).reshape(3, 5)\na\n\narray([[ 0,  1,  2,  3,  4],\n       [ 5,  6,  7,  8,  9],\n       [10, 11, 12, 13, 14]])",
    "crumbs": [
      "Tutoriales",
      "Jupyter",
      "Ejemplo QMD"
    ]
  },
  {
    "objectID": "ejercicios/hello.html#numpy",
    "href": "ejercicios/hello.html#numpy",
    "title": "Quarto Computations",
    "section": "",
    "text": "import numpy as np\na = np.arange(15).reshape(3, 5)\na\n\narray([[ 0,  1,  2,  3,  4],\n       [ 5,  6,  7,  8,  9],\n       [10, 11, 12, 13, 14]])",
    "crumbs": [
      "Tutoriales",
      "Jupyter",
      "Ejemplo QMD"
    ]
  },
  {
    "objectID": "ejercicios/hello.html#matplotlib",
    "href": "ejercicios/hello.html#matplotlib",
    "title": "Quarto Computations",
    "section": "Matplotlib",
    "text": "Matplotlib\n\nimport matplotlib.pyplot as plt\n\nfig = plt.figure()\nx = np.arange(10)\ny = 2.5 * np.sin(x / 20 * np.pi)\nyerr = np.linspace(0.05, 0.2, 10)\n\nplt.errorbar(x, y + 3, yerr=yerr, label='both limits (default)')\nplt.errorbar(x, y + 2, yerr=yerr, uplims=True, label='uplims=True')\nplt.errorbar(x, y + 1, yerr=yerr, uplims=True, lolims=True,\n             label='uplims=True, lolims=True')\n\nupperlimits = [True, False] * 5\nlowerlimits = [False, True] * 5\nplt.errorbar(x, y, yerr=yerr, uplims=upperlimits, lolims=lowerlimits,\n             label='subsets of uplims and lolims')\n\nplt.legend(loc='lower right')\nplt.show(fig)",
    "crumbs": [
      "Tutoriales",
      "Jupyter",
      "Ejemplo QMD"
    ]
  },
  {
    "objectID": "ejercicios/hello.html#plotly",
    "href": "ejercicios/hello.html#plotly",
    "title": "Quarto Computations",
    "section": "Plotly",
    "text": "Plotly\nimport plotly.express as px\nimport plotly.io as pio\ngapminder = px.data.gapminder()\ndef gapminder_plot(year):\n    gapminderYear = gapminder.query(\"year == \" + \n                                    str(year))\n    fig = px.scatter(gapminderYear, \n                     x=\"gdpPercap\", y=\"lifeExp\",\n                     size=\"pop\", size_max=60,\n                     hover_name=\"country\")\n    fig.show()\n    \ngapminder_plot(1957)\ngapminder_plot(2007)\n\n\n\n\n\n\n\n\n                                                \n\n\n(a) Gapminder: 1957\n\n\n\n\n\n\n\n\n                                                \n\n\n(b) Gapminder: 2007\n\n\n\n\n\n\n\nFigure 1: Life Expectancy and GDP",
    "crumbs": [
      "Tutoriales",
      "Jupyter",
      "Ejemplo QMD"
    ]
  },
  {
    "objectID": "ejercicios/hello.html#handcalcs",
    "href": "ejercicios/hello.html#handcalcs",
    "title": "Quarto Computations",
    "section": "Handcalcs",
    "text": "Handcalcs\n\nimport handcalcs.render\nfrom handcalcs import handcalc\nimport pandas\n\n\n%%render long\nA_1 = 34.5\nm_s = 2.35\nF = m_s/A_1\n\n&lt;IPython.core.display.Latex object&gt;\n\n\n#m\\(^2\\) #kg\\(\\cdot\\)s\\(^{-1}\\) #kg\\(\\cdot\\)m\\(^{-2}\\cdot\\)s\\(^{-1}\\)\nfinal",
    "crumbs": [
      "Tutoriales",
      "Jupyter",
      "Ejemplo QMD"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "webpage",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "tutorials/tutorial1.html",
    "href": "tutorials/tutorial1.html",
    "title": "Instalación Jupyter Notebook",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ut ex nec dolor eleifend congue. Donec suscipit imperdiet turpis feugiat blandit. Quisque malesuada lectus ut justo bibendum tempus. Proin ornare lectus vitae euismod interdum. Pellentesque bibendum, ex sed porttitor pellentesque, augue metus tristique lacus, sit amet condimentum ligula eros eu erat. Donec turpis urna, pretium in commodo sagittis, posuere sed felis. Sed sit amet enim ac mauris vulputate varius. Aliquam erat volutpat. Donec quis mattis risus. Duis interdum nulla ac sem viverra lobortis. Suspendisse dapibus tortor nunc, in fringilla ipsum blandit a.",
    "crumbs": [
      "Tutoriales",
      "Jupyter",
      "Instalación Jupyter Notebook"
    ]
  }
]